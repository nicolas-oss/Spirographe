using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Calculs_Rayons : MonoBehaviour
{
    public GameObject DisquePrincipal,DisqueSecondaire,Rayon_1,Rayon_2,AxeRotation1,AxeRotation2,Crayon;
	public float RayonDisque2 = 4f;
	float RayonPrincipal = 10f;
	public float RayonMaximal = 10f;
	public float HauteurDisque = 0.1f;
	public float DureeAnimation = 8.0f;
	Vector3 ScaleDisque1,ScaleDisque2,PosRayon1,PosRayon2;
	Animator AnimatorAxe1,AnimatorAxe2;
	
	public float FacteurTransmission = 2.0f;

	public int lengthOfLineRenderer = 2000;
	public float widthOfLineRenderer = 0.1f;
	public Color c1 = Color.yellow;
    public Color c2 = Color.red;
	
	Vector3 RotationAxe1,RotationAxe2;
	float CoefTransmission;
	Vector3 PointLineRenderer;
	
	// Start is called before the first frame update
    void Start()
    {
        //GetAnimators
		AnimatorAxe1 = AxeRotation1.GetComponent<Animator>();
		AnimatorAxe2 = AxeRotation2.GetComponent<Animator>();
		
		//LineRenderer
		LineRenderer lineRenderer = gameObject.AddComponent<LineRenderer>();

		lineRenderer.material = new Material(Shader.Find("Sprites/Default"));
		
		// A simple 2 color gradient with a fixed alpha of 1.0f.
        float alpha = 1.0f;
        Gradient gradient = new Gradient();
        gradient.SetKeys(
            new GradientColorKey[] { new GradientColorKey(c1, 0.0f), new GradientColorKey(c2, 1.0f) },
            new GradientAlphaKey[] { new GradientAlphaKey(alpha, 0.0f), new GradientAlphaKey(alpha, 1.0f) }
        );
        lineRenderer.colorGradient = gradient;
		Time.fixedDeltaTime=1.0f;
    }

    // Update is called once per frame
    void Update()
    {
      //Calcul et affectation Rayon Principal
	  RayonPrincipal=RayonMaximal-RayonDisque2;
	  PosRayon1= new Vector3(RayonPrincipal,1.0f,1.0f);
	  Rayon_1.transform.localPosition = PosRayon1;
	  
	  //Calcul et affectation Taille disque principal
	  ScaleDisque1 = new Vector3(RayonMaximal*2,HauteurDisque,RayonMaximal*2);
	  DisquePrincipal.transform.localScale = ScaleDisque1;
	
	  //Calcul et affectation Rayon secondaire
	  PosRayon2= new Vector3(RayonDisque2,1.0f,1.0f);
	  Rayon_2.transform.localPosition = PosRayon2;
	  
	  //Calcul et affectation Taille disque secondaire
	  ScaleDisque2 = new Vector3(RayonDisque2*2,HauteurDisque,RayonDisque2*2);
	  DisqueSecondaire.transform.localScale = ScaleDisque2;
	  
	  //Calcul durée anims
	  AnimatorAxe1.SetFloat("DureeRotationPrincipale",1.0f/DureeAnimation);
	  AnimatorAxe2.SetFloat("DureeRotationSecondaire",-1.0f/(DureeAnimation*RayonDisque2/RayonMaximal));
	
	  //Calcul points
		LineRenderer lineRenderer = GetComponent<LineRenderer>();
		        
		lineRenderer.widthMultiplier = widthOfLineRenderer;
        lineRenderer.positionCount = lengthOfLineRenderer;
		
		CoefTransmission = -RayonMaximal/RayonDisque2;
		AxeRotation1.transform.Rotate(0,0,0,Space.World);
		AxeRotation2.transform.Rotate(0,0,0,Space.World);
        for (int i = 0; i < lengthOfLineRenderer; i++)
        {
            //RotationAxe1 = new Vector3(0,i * 360/lengthOfLineRenderer,0);
			//RotationAxe2 = new Vector3(0,CoefTransmission * i * 360/lengthOfLineRenderer,0);
			AxeRotation1.transform.Rotate(0,i * 360/lengthOfLineRenderer,0,Space.Self);
			AxeRotation2.transform.Rotate(0,(i * 360/lengthOfLineRenderer)*CoefTransmission*FacteurTransmission,0,Space.Self);
			PointLineRenderer = Crayon.transform.position;
			lineRenderer.SetPosition(i,PointLineRenderer);
        }
	}
}
